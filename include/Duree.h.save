#ifndef DUREE_H
#define DUREE_H

/**
 * @struct Duree
 * @brief Structure représentant le temps en minute, seconde, et la totalité en seconde
 */

class Duree
{
    public:
        /** Default constructor */
        Duree();
        /** Default destructor */
        virtual ~Duree();
        /** Assignment operator
         *  \param other Object to assign from
         *  \return A reference to this
         */
        Duree& operator=(const Duree& other);
        /** Access m_minute
         * \return The current value of m_minute
         */
        unsigned int GetMinute();
        /** Set m_minute
         * \param val New value to set
         */
        void SetMinute(unsigned int val);
        /** Access m_seconde
         * \return The current value of m_seconde
         */
        unsigned int GetSeconde() { return m_seconde; }
        /** Set m_seconde
         * \param val New value to set
         */
        void SetSeconde(unsigned int val) { m_seconde = val; }
        /** Access m_msecondeTot
         * \return The current value of m_msecondeTot
         */
        unsigned int GetMSecondeTot() { return m_msecondeTot; }
        /** Set m_msecondeTot
         * \param val New value to set
         */
        void SetMSecondeTot(unsigned int val) { m_msecondeTot = val; }
    protected:
    private:
        unsigned int m_minute; //!< Member variable "m_minute"
        unsigned int m_seconde; //!< Member variable "m_seconde"
        unsigned int m_msecondeTot; //!< Member variable "m_msecondeTot"
};

#endif // DUREE_H
